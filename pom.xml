<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.electrosign</groupId>
	<artifactId>ElectroSign</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>ElectroSign</name>
	<description>ElectroSign project for Spring Boot</description>
 
	<dependencyManagement>
	    <dependencies>
	      <dependency>
	        <!-- Import dependency management from Spring Boot -->
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-parent</artifactId>
	        <version>${spring.boot.version}</version>
	        <type>pom</type>
	        <scope>import</scope>
	      </dependency>
	    </dependencies>
    </dependencyManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring.boot.version>1.5.1.RELEASE</spring.boot.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
	    </dependency>
	    <dependency>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-starter-test</artifactId>
	            <scope>test</scope>
	        </dependency>
	  	<dependency>
	    	<groupId>log4j</groupId>
	        <artifactId>log4j</artifactId>
	        <version>1.2.16</version>
	    </dependency>
		<dependency>
		  <groupId>javax.servlet</groupId>
		  <artifactId>jstl</artifactId>
		  </dependency>
		<dependency>
		  <groupId>org.apache.tomcat.embed</groupId>
		  <artifactId>tomcat-embed-jasper</artifactId>
		  <scope>provided</scope>
		</dependency>
		<dependency>
		  <groupId>cglib</groupId>
		  <artifactId>cglib-nodep</artifactId>
		  <version>3.1</version>
		  <scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>electrosign</finalName>
		<plugins>
		  <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-war-plugin</artifactId>
		      <configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
		    </plugin>
		    <plugin>
		      <groupId>org.apache.maven.plugins</groupId>
		      <artifactId>maven-war-plugin</artifactId>
		      <version>2.6</version>
		    </plugin>
				  
		  <plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
			<version>${spring.boot.version}</version>
			<configuration>
			  <folders>
				<folder>${basedir}/src/test/resources</folder>
			  </folders>
			  <jvmArguments>
				${jvm.arguments}
			  </jvmArguments>
			</configuration>
			<executions>
			  <execution>
				<goals>
				  <goal>repackage</goal>
				</goals>
			  </execution>
			</executions>
		  </plugin>
		    <!-- Plugin to execute command  "npm install" and "npm run build" inside /static directory -->
		    <plugin>
		      <groupId>com.github.eirslett</groupId>
		      <artifactId>frontend-maven-plugin</artifactId>
		      <version>1.0</version>
		      <configuration>
		        <workingDirectory>${project.basedir}/src/main/webapp/resources/static</workingDirectory>
		      </configuration>
		      <executions>
		        <!-- It will install nodejs and npm 		-->
		        <execution>
		          <id>install node and npm</id>
		          <goals>
		            <goal>install-node-and-npm</goal>
		          </goals>
		          <configuration>
		            <nodeVersion>v6.10.2</nodeVersion>
		            <npmVersion>3.9.5</npmVersion>
		          </configuration>
		        </execution>

		        <!-- It will execute command "npm install" inside "/static" directory 		-->
		        <execution>
		          <id>npm install</id>
		          <goals>
		            <goal>npm</goal>
		          </goals>
		          <configuration>
		            <arguments>install</arguments>
		          </configuration>
		        </execution>

		        <!-- It will execute command "npm build" inside "/static" directory to clean and create "/dist" directory-->
		        <execution>
		          <id>npm build</id>
		          <goals>
		            <goal>npm</goal>
		          </goals>
		          <configuration>
		            <arguments>run build</arguments>
		          </configuration>
		        </execution>
		      </executions>
		    </plugin>
		
				<plugin>
							<groupId>org.codehaus.gmaven</groupId>
							<artifactId>gmaven-plugin</artifactId>
							<version>1.4</version>
							<configuration>
								<source/>
								<providerSelection>2.0</providerSelection>
							</configuration>
							<executions>
								<execution>
								<goals>
									<goal>compile</goal>
									<goal>testCompile</goal>
								</goals>
								</execution>
							</executions>
							<dependencies>
								<dependency>
								<groupId>org.codehaus.gmaven.runtime</groupId>
								<artifactId>gmaven-runtime-2.0</artifactId>
								<version>1.4</version>
								</dependency>
							</dependencies>
				</plugin>
		</plugins>
	  </build>
</project>
